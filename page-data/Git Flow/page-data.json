{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/Git Flow",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Git Flow\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/RadWeb/731d8014a614d57ac93572572d449b0a/2021-12-24-15-39-31.png\",\n    \"alt\": null\n  }), \"\\nResources \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.gitkraken.com/learn/git/best-practices/git-branch-strategy\"\n  }, \"here\")), mdx(\"h3\", null, \"What is a git branch strategy ?\"), mdx(\"p\", null, \"The main idea behind the Git flow branching strategy is to isolate your work into different types of branches.\"), mdx(\"p\", null, \"There are five different branch types in total:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Main\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Develop\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Release\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hotfix\")), mdx(\"p\", null, \"The two primary branches in Git flow are main and develop. There are three types of supporting branches with different intended purposes: feature, release, and hotfix.\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Github flow\"), mdx(\"p\", null, \"Git Flow in the way recommended by GitHub\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/RadWeb/5ed54fcc36b70fc1c36dfec414b012f8/2021-12-24-15-42-29.png\",\n    \"alt\": \"GitHub Flow\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#git-flow","title":"Git Flow","items":[{"items":[{"url":"#what-is-a-git-branch-strategy-","title":"What is a git branch strategy ?"}]},{"url":"#github-flow","title":"Github flow"}]}]},"outboundReferences":[],"inboundReferences":[]},"fields":{"slug":"/Git Flow","title":"Git Flow"}}},"pageContext":{"id":"f5f01345-bfd3-534e-a4af-f97e1f7cfdb4","refWordMdxSlugDict":{},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}